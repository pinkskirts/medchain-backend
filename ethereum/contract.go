package ethereum

import (
	"context"
	"crypto/ecdsa"
	"fmt"
	"log"
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/crypto"
)

const (
    contractBin = ""
    contractAbi = "[ { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"prescription_id\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"string\", \"name\": \"patient\", \"type\": \"string\" } ], \"name\": \"PrescriptionCreated\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"_patient\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_description\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"_exp_date\", \"type\": \"uint256\" }, { \"internalType\": \"string[]\", \"name\": \"_medicine_names\", \"type\": \"string[]\" }, { \"internalType\": \"string[]\", \"name\": \"_posologies\", \"type\": \"string[]\" } ], \"name\": \"createPrescription\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"prescriptions\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"exp_date\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"patient\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"description\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"prescriptions_total\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"_prescriptionId\", \"type\": \"uint256\" } ], \"name\": \"receitaValida\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"_prescriptionId\", \"type\": \"uint256\" } ], \"name\": \"viewPrescription\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"exp_date\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"patient\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"description\", \"type\": \"string\" }, { \"components\": [ { \"internalType\": \"string\", \"name\": \"name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"posology\", \"type\": \"string\" } ], \"internalType\": \"struct PrescriptionContract.Medication[]\", \"name\": \"medications\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]"
)

func DeployContract() {
    client, err := Connect()
    if err != nil {
        logger.Fatal(err)
    }

    pk, err := crypto.HexToECDSA(WALLET_KEY)
    if err != nil {
        logger.Fatal(err)
    }

    pubk := pk.Public()
    pubkECDSA, ok := pubk.(*ecdsa.PublicKey)
    if !ok { // Assert cast
        log.Fatal("Failed to cast public key to ECDSA Format")
    }

    fromAddr := crypto.PubkeyToAddress(*pubkECDSA)
    nonce, err := client.PendingNonceAt(context.Background(), fromAddr)
    if err != nil {
        logger.Fatal(err)
    }

    gasPrice, err := client.SuggestGasPrice(context.Background())
    if err != nil {
        logger.Fatal(err)
    }

    chainID, err := client.ChainID(context.Background())
    if err != nil {
        logger.Panic(err)
    }

    auth, err := bind.NewKeyedTransactorWithChainID(pk, chainID)
    if err != nil {
        logger.Panic(err)
    }

    auth.Nonce = big.NewInt(int64(nonce))
    auth.GasLimit = uint64(300000) // in units
    auth.GasPrice = gasPrice

    abiParsed, err := abi.JSON(strings.NewReader(contractAbi))
    if err != nil {
        logger.Panic(err)
    }

    addr, tx, _, err := bind.DeployContract(auth, abiParsed, common.FromHex(contractBin), client)
    if err != nil {
        logger.Panic(err.Error())
    }

    fmt.Println(addr.Hex())
    fmt.Println(tx.Hash().Hex())
}
